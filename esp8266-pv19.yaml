substitutions:
  device_name: "pv19_6248_exp"
  name: "Must inverter"
  device_description: "Monitor MUST inverter via RS485"
  tx_pin: GPIO13
  rx_pin: GPIO12
  updates: 20s
  api_key: xxx
  ota_password: xxx

esphome:
  name: "pv19_6248_exp"

esp8266:
  board: d1_mini

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
  ap:
    ssid: ${device_name}
    password: !secret ap_password

captive_portal:

logger:
    baud_rate: 0

api:
  encryption:
    key: ${api_key}

ota:
  - platform: esphome
    password: ${ota_password}

web_server:
  port: 80

switch:
  - platform: restart
    name: "${device_name} restart"

uart:
  id: mod_bus
  tx_pin: GPIO12
  rx_pin: GPIO13
  baud_rate: 19200
  stop_bits: 1
  parity: NONE
  data_bits: 8

modbus:
  id: mod_bus_must
  send_wait_time: 350ms

modbus_controller:
  - id: must
    address: 0x4
    modbus_id: mod_bus_must
    setup_priority: -10
    update_interval: ${updates}

sensor:
  - platform: modbus_controller
    address: 113
    name: "State of Charge"
    unit_of_measurement: "%"
    register_type: holding
  - platform: mmodbus_controller
    address: 114
    name: "State of Health"
    unit_of_measurement: "%"
    register_type: holding
  - platform: modbus_controller
    address: 15201
    name: "Charger workstate"
    register_type: holding
    icon: mdi:battery-charging-50
  - platform: modbus_controller
    address: 15202
    name: "MPPT state"
    register_type: holding
  - platform: modbus_controller
    address: 15203
    name: "Charging state"
    register_type: holding
  - platform: modbus_controller
    address: 25261
    name: "Inverter Error message 1"
    register_type: holding
  - platform: modbus_controller
    address: 25262
    name: "Inverter Error message 2"
    register_type: holding
  - platform: modbus_controller
    address: 25263
    name: "Inverter Error message 3"
    register_type: holding
  - platform: modbus_controller
    address: 25265
    name: "Inverter Warning message 1"
    register_type: holding
  - platform: modbus_controller
    address: 25266
    name: "Inverter Warning message 2"
    register_type: holding
  - platform: modbus_controller
    address: 15213
    bitmask: 0x3ff 
    name: "Charger Error message"
    register_type: holding
  - platform: modbus_controller
    address: 15214
    name: "Charger Warning message"
    register_type: holding
  - platform: modbus_controller
    address: 15205
    name: "PV1 voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 16205
    name: "PV2 voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 15206
    name: "Battery voltage (charger side)"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 15207
    name: "PV1 Charger Current"
    register_type: holding
    unit_of_measurement: "A"
    accuracy_decimals: 1
    icon: mdi:current-dc
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 16207
    name: "PV2 Charger Current"
    register_type: holding
    unit_of_measurement: "A"
    accuracy_decimals: 1
    icon: mdi:current-dc
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 15208
    register_type: holding
    name: "PV1 Charger power"
    unit_of_measurement: "W"
    device_class: power
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 16208
    register_type: holding
    name: "PV2 Charger power"
    unit_of_measurement: "W"
    device_class: power
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 15211
    register_type: holding
    name: "Battery Relay"
  - platform: modbus_controller
    address: 15217
    register_type: holding
    # name: "Accumulated charger power MWh"
    id: charger_total_mwh
    internal: true
  - platform: modbus_controller
    address: 15218
    register_type: holding
    # name: "Accumulated charger power kWh"
    id: charger_total_kwh
    internal: true
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated charger power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(charger_total_mwh).state * 1000.0 + id(charger_total_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25201
    register_type: holding
    name: "Inverter Work state"
  - platform: modbus_controller
    address: 25205
    name: "Battery voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
    on_value_range:
      - below: !lambda 'return id(inv_grid_chg_start).state;'
        then:
          - select.set_index:
              id: charger_source_priority
              index: 1  # SNU
      - above: !lambda 'return id(inv_grid_chg_stop).state;'
        then:
          - select.set_index:
              id: charger_source_priority
              index: 0  # SCO
  - platform: modbus_controller
    address: 25206
    name: "Inverter voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 25207
    name: "Grid voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 25213
    name: "Inverter power"
    register_type: holding
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
    value_type: S_WORD
  - platform: modbus_controller
    address: 25214
    name: "Grid power"
    register_type: holding
    unit_of_measurement: "W"
    accuracy_decimals: 1
    value_type: S_WORD
    icon: mdi:flash
  - platform: modbus_controller
    address: 25215
    name: "Load power"
    register_type: holding
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 25216
    name: "System load"
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 25233
    register_type: holding
    name: "AC radiator temp"
    accuracy_decimals: 1
    unit_of_measurement: "°C"
  - platform: modbus_controller
    address: 25234
    register_type: holding
    name: "Transformer temp"
    unit_of_measurement: "°C"
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25235
    register_type: holding
    name: "DC Radiator temp"
    unit_of_measurement: "°C"
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25247
    register_type: holding
    # name: "Accumulated discharger power MWh"
    id: discharger_total_mwh
    internal: true
  - platform: modbus_controller
    address: 25248
    register_type: holding
    # name: "Accumulated discharger power kWh"
    id: discharger_total_kwh
    internal: true
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated discharger power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(discharger_total_mwh).state * 1000.0 + id(discharger_total_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25245
    register_type: holding
    # name: "Accumulated charger power MWh"
    id: inv_charger_total_mwh
    internal: true
  - platform: modbus_controller
    address: 25246
    register_type: holding
    # name: "Accumulated charger power kWh"
    id: inv_charger_total_kwh
    internal: true
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated INV charger power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(inv_charger_total_mwh).state * 1000.0 + id(inv_charger_total_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25249
    register_type: holding
    # name: "Accumulated buy power MWh"
    id: buy_mwh
    internal: true
  - platform: modbus_controller
    address: 25250
    register_type: holding
    # name: "Accumulated buy power kWh"
    id: buy_kwh
    internal: true
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated buy power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(buy_mwh).state * 1000.0 + id(buy_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25251
    register_type: holding
    # name: "Accumulated sell power MWh"
    id: sell_mwh
  - platform: modbus_controller
    address: 25252
    register_type: holding
    # name: "Accumulated sell power kWh"
    id: sell_kwh
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated sell power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(sell_mwh).state * 1000.0 + id(sell_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25253
    register_type: holding
    # name: "Accumulated load power MWh"
    id: load_mwh
    internal: true
  - platform: modbus_controller
    address: 25254
    register_type: holding
    # name: "Accumulated load power kWh"
    id: load_kwh
    internal: true
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated load power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(load_mwh).state * 1000.0 + id(load_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25259
    register_type: holding
    # name: "Accumulated grid charge power MWh"
    id: grid_charge_mwh
    internal: true
  - platform: modbus_controller
    address: 25260
    register_type: holding
    # name: "Accumulated grid charge power kWh"
    id: grid_charge_kwh
    internal: true
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated grid charge power"
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    lambda: |-
     return (id(grid_charge_mwh).state * 1000.0 + id(grid_charge_kwh).state );
    accuracy_decimals: 1
  - platform: modbus_controller
    address: 25273
    register_type: holding
    value_type: S_WORD
    name: "Battery power"
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 25274
    register_type: holding
    value_type: S_WORD
    name: "Battery current"
    unit_of_measurement: "A"
    accuracy_decimals: 1
    icon: mdi:current-dc
select:
  - platform: modbus_controller
    id: energy_use_mode
    name: "Energy use mode (parameter 00)"
    address: 20109
    optionsmap:
      "SBU (Solar/battery/utility)": 1
      "SUB (Solar/utility/battery)": 2
      "UTI (Utility only)": 3
      "SOL (Solar only)": 4
  - platform: modbus_controller
    id: charger_source_priority
    name: "Charger source priority (parameter 10)"
    address: 20143
    optionsmap:
      "CSO (Solar first)": 0        # select index 0
      "SNU (Solar and utility)": 2  # select index 1
      "OSO (Solar only)": 3         # select index 2
  - platform: modbus_controller
    id: solar_use_aim
    name: "Solar Use Aim"
    address: 20112
    optionsmap:
      "LBU (Load, Battery, Utility)": 0        # select index 0
      "BLU (Battery, Load, Utility)": 1        # select index 1
number:
  - platform: template
    name: "INV Enable grid charge"
    id: inv_grid_chg_start
    device_class: voltage
    unit_of_measurement: "V"
    min_value: 48
    max_value: 58.4
    initial_value: 51
    step: 0.1
    optimistic: true
    restore_value: true
    mode: box
  - platform: template
    name: "INV Disable grid charge"
    id: inv_grid_chg_stop
    device_class: voltage
    unit_of_measurement: "V"
    min_value: 48
    max_value: 58.4
    initial_value: 53
    step: 0.1
    optimistic: true
    restore_value: true
    mode: box
  - platform: modbus_controller
    id: batt_float_voltage
    name: "Float voltage"
    unit_of_measurement: "V"
    address: 10103
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    id: batt_absorb_voltage
    name: "Absorb voltage"
    unit_of_measurement: "V"
    address: 10104
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    id: batt_stop_dischg
    name: "Battery stop discharging voltage"
    unit_of_measurement: "V"
    address: 20118
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    id: batt_stop_chg
    name: "Battery stop charging voltage"
    unit_of_measurement: "V"
    address: 20119
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    id: batt_low_voltage
    name: "Battery low voltage"
    unit_of_measurement: "V"
    address: 20127
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    id: batt_high_voltage
    name: "Battery high voltage"
    unit_of_measurement: "V"
    address: 20128
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    name: "Max Grid Charger current"
    unit_of_measurement: "A"
    address: 20125
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
  - platform: modbus_controller
    name: "Max Combine Charger current"
    unit_of_measurement: "A"
    address: 20132
    value_type: U_WORD
    lambda: "return x * 0.1; "
    write_lambda: |-
      return x * 10 ;
